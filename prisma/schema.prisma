// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(uuid())
  clerkId     String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  firstname   String
  lastname    String
  email       String   @unique
  phonenumber String
  employer    Boolean
  roles       Role[]

  @@map("users")
}

model Company {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  companyName String
  companyLogo String
  email       String   @unique
  phonenumber String
  description String
  location    String
  jobs        Job[]

  @@map("companies")
}

model Role {
  id        String   @id @default(uuid())
  email     String   @unique
  userRole  String
  companyId String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  @@index([userId])
  @@map("roles")
}

model Job {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  jobTitle      String
  jobDesc       String
  jobIndustry   String
  jobCategory   String
  jobType       String
  experience    String
  qualification String
  salary        String
  email         String
  location      String
  state         String
  featured      Boolean
  endDate       String
  company       Company  @relation(fields: [companyId], references: [id])
  companyId     String

  @@index([companyId])
  @@map("jobs")
}
